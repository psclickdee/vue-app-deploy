{"version":3,"sources":["webpack:///./src/core/helpers/documentation.ts","webpack:///./src/views/addAddress/Add.vue?974f","webpack:///./src/views/addAddress/Add.vue","webpack:///./src/views/addAddress/Add.vue?a658","webpack:///./src/core/helpers/breadcrumb.ts"],"names":["themeName","getters","layoutConfig","version","demo","useCopyClipboard","_init","element","elements","document","querySelectorAll","length","i","highlight","copy","querySelector","clipboard","target","trigger","closest","el","on","e","caption","innerHTML","clearSelection","setTimeout","init","_hoisted_1","class","_hoisted_2","_hoisted_3","render","_ctx","_cache","$props","$setup","$data","$options","name","setup","tabIndex","value","parseInt","localStorage","getItem","reset","event","preventDefault","removeItem","window","location","reload","setActiveTab","getAttribute","setItem","toString","submit","JSON","stringify","config","__exports__","setCurrentPageBreadcrumbs","pageTitle","breadcrumbs","dispatch","SET_BREADCRUMB_ACTION","title","pageBreadcrumbPath","setCurrentPageTitle"],"mappings":"kHAAA,yLASaA,EAAY,uBAAS,WAChC,OAAO,OAAMC,QAAQC,aAAa,gBAOvBC,EAAU,uBAAS,WAC9B,OAAO,OAAMF,QAAQC,aAAa,mBAOvBE,EAAO,uBAAS,WAC3B,OAAO,OAAMH,QAAQC,aAAa,WAIvBG,EAAmB,WAC9B,IAAMC,EAAQ,SAACC,GACb,IAAIC,EAAWD,EAMf,GAJwB,qBAAbC,IACTA,EAAWC,SAASC,iBAAiB,eAGnCF,GAAYA,EAASG,OAAS,EAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASG,SAAUC,EAAG,CACxC,IAAMC,EAAYL,EAASI,GACrBE,EAAOD,EAAUE,cAAc,mBAErC,GAAID,EAAM,CACR,IAAME,EAAY,IAAI,IAAYF,EAAM,CACtCG,OAAQ,SAACC,GACP,IAAML,EAAYK,EAAQC,QAAQ,cAElC,GAAIN,EAAW,CACb,IAAIO,EACFP,EAAUE,cAAc,oBAM1B,OAJU,MAANK,IACFA,EAAKP,EAAUE,cAAc,oBAGxBK,EAGT,OAAOP,KAIXG,EAAUK,GAAG,WAAW,SAACC,GACvB,IAAMC,EAAUD,EAAEJ,QAAQM,UAE1BF,EAAEJ,QAAQM,UAAY,SACtBF,EAAEG,iBAEFC,YAAW,WACTJ,EAAEJ,QAAQM,UAAYD,IACrB,WAOb,MAAO,CACLI,KAAM,SAACpB,GACLD,EAAMC,O,2DC9ENqB,EAAa,CAAEC,MAAO,QACtBC,EAA0B,+BAAmB,6XAAsZ,GACncC,EAAa,CACjBD,GAGK,SAASE,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQ,yBAAc,gCAAoB,MAAOV,EAAYG,G,wCCFhD,+BAAgB,CAC7BQ,KAAM,MAINC,MAAK,WACH,IAAMC,EAAW,iBAAI,GAErB,wBAAU,WAERA,EAASC,MAAQC,SAASC,aAAaC,QAAQ,eAAiB,KAEhE,eAAoB,UAOtB,IAAMC,EAAQ,SAACC,GACbA,EAAMC,iBAENJ,aAAaK,WAAW,UACxBC,OAAOC,SAASC,UAOZC,EAAe,SAACN,GACpBN,EAASC,MAAQC,SAASI,EAAM9B,OAAOqC,aAAa,mBAEpDV,aAAaW,QAAQ,aAAcd,EAASC,MAAMc,aAO9CC,EAAS,SAACV,GACdA,EAAMC,iBAENJ,aAAaW,QAAQ,SAAUG,KAAKC,UAAUC,EAAA,KAAOlB,QACrDQ,OAAOC,SAASC,UAGlB,MAAO,CACLX,SAAQ,EACRmB,OAAM,OACNd,MAAK,EACLO,aAAY,EACZI,OAAM,EACNzD,UAAS,W,qBCvDf,MAAM6D,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS7B,KAErD,gB,kCCPf,gGAQa8B,EAA4B,SACvCC,EACAC,GAEA,OAAMC,SAAS,OAAQC,sBAAuB,CAC5CC,MAAOJ,EACPK,mBAAoBJ,KAQXK,EAAsB,SAACF,GAClC,OAAMF,SAAS,OAAQC,sBAAuB,CAC5CC,MAAOA","file":"js/chunk-aef19e8a.1e280d00.js","sourcesContent":["import { computed } from \"vue\";\nimport store from \"@/store/index\";\nimport ClipboardJS from \"clipboard\";\n/* eslint-disable  @typescript-eslint/no-explicit-any */\n\n/**\n * Return name of the theme\n * @returns {string}\n */\nexport const themeName = computed(() => {\n  return store.getters.layoutConfig(\"themeName\");\n});\n\n/**\n * Return version of the theme\n * @returns {string}\n */\nexport const version = computed(() => {\n  return store.getters.layoutConfig(\"themeVersion\");\n});\n\n/**\n * Return demo name\n * @returns {string}\n */\nexport const demo = computed(() => {\n  return store.getters.layoutConfig(\"demo\");\n});\n\n//code copy button initialization\nexport const useCopyClipboard = () => {\n  const _init = (element) => {\n    let elements = element;\n\n    if (typeof elements === \"undefined\") {\n      elements = document.querySelectorAll(\".highlight\");\n    }\n\n    if (elements && elements.length > 0) {\n      for (let i = 0; i < elements.length; ++i) {\n        const highlight = elements[i];\n        const copy = highlight.querySelector(\".highlight-copy\");\n\n        if (copy) {\n          const clipboard = new ClipboardJS(copy, {\n            target: (trigger): any => {\n              const highlight = trigger.closest(\".highlight\");\n\n              if (highlight) {\n                let el: Element | null =\n                  highlight.querySelector(\".tab-pane.active\");\n\n                if (el == null) {\n                  el = highlight.querySelector(\".highlight-code\");\n                }\n\n                return el as Element;\n              }\n\n              return highlight;\n            },\n          });\n\n          clipboard.on(\"success\", (e) => {\n            const caption = e.trigger.innerHTML;\n\n            e.trigger.innerHTML = \"copied\";\n            e.clearSelection();\n\n            setTimeout(function () {\n              e.trigger.innerHTML = caption;\n            }, 2000);\n          });\n        }\n      }\n    }\n  };\n\n  return {\n    init: (element?) => {\n      _init(element);\n    },\n  };\n};\n","import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"card\" }\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<form><div class=\\\"card-body\\\"><div class=\\\"form-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add Addresses\\\"></div><br><div class=\\\"form-group mb-1\\\"><label for=\\\"exampleTextarea\\\">Enter Address Here </label><textarea class=\\\"form-control\\\" id=\\\"exampleTextarea\\\" rows=\\\"5\\\"></textarea></div><button type=\\\"submit\\\" class=\\\"btn btn-primary mr-2 mt-2\\\">Submit</button></div></form>\", 1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3))\n}","\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport { config } from \"@/core/helpers/config\";\n// import CodeHighlighter from \"@/components/highlighters/CodeHighlighter.vue\";\nimport { themeName } from \"@/core/helpers/documentation\";\nimport { setCurrentPageTitle } from \"@/core/helpers/breadcrumb\";\n\nexport default defineComponent({\n  name: \"add\",\n  // components: {\n  //   CodeHighlighter,\n  // },\n  setup() {\n    const tabIndex = ref(0);\n\n    onMounted(() => {\n      // set the tab from previous\n      tabIndex.value = parseInt(localStorage.getItem(\"builderTab\") || \"0\");\n\n      setCurrentPageTitle(\"Add\");\n    });\n\n    /**\n     * Reset config\n     * @param event\n     */\n    const reset = (event) => {\n      event.preventDefault();\n      // remove existing saved config\n      localStorage.removeItem(\"config\");\n      window.location.reload();\n    };\n\n    /**\n     * Set active tab when the tab get clicked\n     * @param event\n     */\n    const setActiveTab = (event) => {\n      tabIndex.value = parseInt(event.target.getAttribute(\"data-tab-index\"));\n      // keep active tab\n      localStorage.setItem(\"builderTab\", tabIndex.value.toString());\n    };\n\n    /**\n     * Submit form\n     * @param event\n     */\n    const submit = (event) => {\n      event.preventDefault();\n      // save new config to localStorage\n      localStorage.setItem(\"config\", JSON.stringify(config.value));\n      window.location.reload();\n    };\n\n    return {\n      tabIndex,\n      config,\n      reset,\n      setActiveTab,\n      submit,\n      themeName,\n    };\n  },\n});\n","import { render } from \"./Add.vue?vue&type=template&id=275480d8&ts=true\"\nimport script from \"./Add.vue?vue&type=script&lang=ts\"\nexport * from \"./Add.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/auriga/Delhi/Add-App/New Add-Pro/Address-project/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import store from \"@/store\";\nimport { Actions } from \"@/store/enums/StoreEnums\";\n\n/**\n * Sets current page breadcrumbs\n * @param {string} pageTitle Current page title\n * @param {Array<string>} breadcrumbs Current page breadcrumbs\n */\nexport const setCurrentPageBreadcrumbs = (\n  pageTitle: string,\n  breadcrumbs: Array<string>\n): void => {\n  store.dispatch(Actions.SET_BREADCRUMB_ACTION, {\n    title: pageTitle,\n    pageBreadcrumbPath: breadcrumbs,\n  });\n};\n\n/**\n * Sets current page breadcrumbs\n * @param {string} title Current page title name\n */\nexport const setCurrentPageTitle = (title: string): void => {\n  store.dispatch(Actions.SET_BREADCRUMB_ACTION, {\n    title: title,\n  });\n};\n"],"sourceRoot":""}